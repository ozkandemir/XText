/*
* generated by Xtext
*/
grammar InternalProduct;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.ykb.umap.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ykb.umap.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.ykb.umap.dsl.services.ProductGrammarAccess;

}

@parser::members {
 
 	private ProductGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ProductGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProduct
entryRuleProduct 
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductAccess().getElementsAssignment()); }
(rule__Product__ElementsAssignment)
{ after(grammarAccess.getProductAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit 
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilationUnitAccess().getGroup()); }
(rule__CompilationUnit__Group__0)
{ after(grammarAccess.getCompilationUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseUnit
entryRuleUseUnit 
:
{ before(grammarAccess.getUseUnitRule()); }
	 ruleUseUnit
{ after(grammarAccess.getUseUnitRule()); } 
	 EOF 
;

// Rule UseUnit
ruleUseUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseUnitAccess().getGroup()); }
(rule__UseUnit__Group__0)
{ after(grammarAccess.getUseUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceUnit
entryRuleNamespaceUnit 
:
{ before(grammarAccess.getNamespaceUnitRule()); }
	 ruleNamespaceUnit
{ after(grammarAccess.getNamespaceUnitRule()); } 
	 EOF 
;

// Rule NamespaceUnit
ruleNamespaceUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceUnitAccess().getGroup()); }
(rule__NamespaceUnit__Group__0)
{ after(grammarAccess.getNamespaceUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIEDID
entryRuleQUALIFIEDID 
:
{ before(grammarAccess.getQUALIFIEDIDRule()); }
	 ruleQUALIFIEDID
{ after(grammarAccess.getQUALIFIEDIDRule()); } 
	 EOF 
;

// Rule QUALIFIEDID
ruleQUALIFIEDID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getGroup()); }
(rule__QUALIFIEDID__Group__0)
{ after(grammarAccess.getQUALIFIEDIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProductUnit
entryRuleProductUnit 
:
{ before(grammarAccess.getProductUnitRule()); }
	 ruleProductUnit
{ after(grammarAccess.getProductUnitRule()); } 
	 EOF 
;

// Rule ProductUnit
ruleProductUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductUnitAccess().getGroup()); }
(rule__ProductUnit__Group__0)
{ after(grammarAccess.getProductUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterElement
entryRuleParameterElement 
:
{ before(grammarAccess.getParameterElementRule()); }
	 ruleParameterElement
{ after(grammarAccess.getParameterElementRule()); } 
	 EOF 
;

// Rule ParameterElement
ruleParameterElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterElementAccess().getGroup()); }
(rule__ParameterElement__Group__0)
{ after(grammarAccess.getParameterElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationUnit
entryRuleOperationUnit 
:
{ before(grammarAccess.getOperationUnitRule()); }
	 ruleOperationUnit
{ after(grammarAccess.getOperationUnitRule()); } 
	 EOF 
;

// Rule OperationUnit
ruleOperationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationUnitAccess().getGroup()); }
(rule__OperationUnit__Group__0)
{ after(grammarAccess.getOperationUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlElement
entryRuleControlElement 
:
{ before(grammarAccess.getControlElementRule()); }
	 ruleControlElement
{ after(grammarAccess.getControlElementRule()); } 
	 EOF 
;

// Rule ControlElement
ruleControlElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlElementAccess().getGroup()); }
(rule__ControlElement__Group__0)
{ after(grammarAccess.getControlElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionElement
entryRuleExpressionElement 
:
{ before(grammarAccess.getExpressionElementRule()); }
	 ruleExpressionElement
{ after(grammarAccess.getExpressionElementRule()); } 
	 EOF 
;

// Rule ExpressionElement
ruleExpressionElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionElementAccess().getGroup()); }
(rule__ExpressionElement__Group__0)
{ after(grammarAccess.getExpressionElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlStatementElement
entryRuleControlStatementElement 
:
{ before(grammarAccess.getControlStatementElementRule()); }
	 ruleControlStatementElement
{ after(grammarAccess.getControlStatementElementRule()); } 
	 EOF 
;

// Rule ControlStatementElement
ruleControlStatementElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlStatementElementAccess().getGroup()); }
(rule__ControlStatementElement__Group__0)
{ after(grammarAccess.getControlStatementElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule UMAPDataTypes
ruleUMAPDataTypes
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUMAPDataTypesAccess().getAlternatives()); }
(rule__UMAPDataTypes__Alternatives)
{ after(grammarAccess.getUMAPDataTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OPERATORS
ruleOPERATORS
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOPERATORSAccess().getAlternatives()); }
(rule__OPERATORS__Alternatives)
{ after(grammarAccess.getOPERATORSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UMAPDataTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUMAPDataTypesAccess().getBRANCHEnumLiteralDeclaration_0()); }
(	'BRANCH' 
)
{ after(grammarAccess.getUMAPDataTypesAccess().getBRANCHEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUMAPDataTypesAccess().getCLIENTEnumLiteralDeclaration_1()); }
(	'CLIENT' 
)
{ after(grammarAccess.getUMAPDataTypesAccess().getCLIENTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUMAPDataTypesAccess().getCURRENCYEnumLiteralDeclaration_2()); }
(	'CURRENCY' 
)
{ after(grammarAccess.getUMAPDataTypesAccess().getCURRENCYEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUMAPDataTypesAccess().getNUMBEREnumLiteralDeclaration_3()); }
(	'NUMBER' 
)
{ after(grammarAccess.getUMAPDataTypesAccess().getNUMBEREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getUMAPDataTypesAccess().getSTRINGEnumLiteralDeclaration_4()); }
(	'STRING' 
)
{ after(grammarAccess.getUMAPDataTypesAccess().getSTRINGEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OPERATORS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOPERATORSAccess().getISEnumLiteralDeclaration_0()); }
(	'is' 
)
{ after(grammarAccess.getOPERATORSAccess().getISEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOPERATORSAccess().getNOTEnumLiteralDeclaration_1()); }
(	'is not' 
)
{ after(grammarAccess.getOPERATORSAccess().getNOTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CompilationUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__0__Impl
	rule__CompilationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getNamespaceUnitAssignment_0()); }
(rule__CompilationUnit__NamespaceUnitAssignment_0)
{ after(grammarAccess.getCompilationUnitAccess().getNamespaceUnitAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__1__Impl
	rule__CompilationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getUseUnitAssignment_1()); }
(rule__CompilationUnit__UseUnitAssignment_1)?
{ after(grammarAccess.getCompilationUnitAccess().getUseUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getProductUnitAssignment_2()); }
(rule__CompilationUnit__ProductUnitAssignment_2)
{ after(grammarAccess.getCompilationUnitAccess().getProductUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseUnit__Group__0__Impl
	rule__UseUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseUnitAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getUseUnitAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseUnit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseUnitAccess().getProductUnitAssignment_1()); }
(rule__UseUnit__ProductUnitAssignment_1)
{ after(grammarAccess.getUseUnitAccess().getProductUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceUnit__Group__0__Impl
	rule__NamespaceUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceUnitAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceUnitAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceUnit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceUnitAccess().getNameAssignment_1()); }
(rule__NamespaceUnit__NameAssignment_1)
{ after(grammarAccess.getNamespaceUnitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group__0__Impl
	rule__QUALIFIEDID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getGroup_1()); }
(rule__QUALIFIEDID__Group_1__0)*
{ after(grammarAccess.getQUALIFIEDIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group_1__0__Impl
	rule__QUALIFIEDID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQUALIFIEDIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProductUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group__0__Impl
	rule__ProductUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getProductKeyword_0()); }

	'product' 

{ after(grammarAccess.getProductUnitAccess().getProductKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group__1__Impl
	rule__ProductUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getNameAssignment_1()); }
(rule__ProductUnit__NameAssignment_1)
{ after(grammarAccess.getProductUnitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group__2__Impl
	rule__ProductUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getGroup_2()); }
(rule__ProductUnit__Group_2__0)
{ after(grammarAccess.getProductUnitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getOperationUnitAssignment_3()); }
(rule__ProductUnit__OperationUnitAssignment_3)
{ after(grammarAccess.getProductUnitAccess().getOperationUnitAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProductUnit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group_2__0__Impl
	rule__ProductUnit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getParametersKeyword_2_0()); }

	'parameters' 

{ after(grammarAccess.getProductUnitAccess().getParametersKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductUnit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductUnit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getParametersAssignment_2_1()); }
(rule__ProductUnit__ParametersAssignment_2_1)*
{ after(grammarAccess.getProductUnitAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterElement__Group__0__Impl
	rule__ParameterElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getNameAssignment_0()); }
(rule__ParameterElement__NameAssignment_0)
{ after(grammarAccess.getParameterElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getGroup_1()); }
(rule__ParameterElement__Group_1__0)?
{ after(grammarAccess.getParameterElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterElement__Group_1__0__Impl
	rule__ParameterElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getParameterElementAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getTypeAssignment_1_1()); }
(rule__ParameterElement__TypeAssignment_1_1)
{ after(grammarAccess.getParameterElementAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group__0__Impl
	rule__OperationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getOperationKeyword_0()); }

	'operation' 

{ after(grammarAccess.getOperationUnitAccess().getOperationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group__1__Impl
	rule__OperationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getNameAssignment_1()); }
(rule__OperationUnit__NameAssignment_1)
{ after(grammarAccess.getOperationUnitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group__2__Impl
	rule__OperationUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getOperationUnitAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getGroup_3()); }
(rule__OperationUnit__Group_3__0)?
{ after(grammarAccess.getOperationUnitAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationUnit__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group_3__0__Impl
	rule__OperationUnit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getControlsKeyword_3_0()); }

	'controls' 

{ after(grammarAccess.getOperationUnitAccess().getControlsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationUnit__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationUnit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getControlsAssignment_3_1()); }
(rule__OperationUnit__ControlsAssignment_3_1)
{ after(grammarAccess.getOperationUnitAccess().getControlsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ControlElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlElement__Group__0__Impl
	rule__ControlElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlElementAccess().getExpressionAssignment_0()); }
(rule__ControlElement__ExpressionAssignment_0)
{ after(grammarAccess.getControlElementAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlElement__Group__1__Impl
	rule__ControlElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlElementAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getControlElementAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlElementAccess().getControlStatementAssignment_2()); }
(rule__ControlElement__ControlStatementAssignment_2)
{ after(grammarAccess.getControlElementAccess().getControlStatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionElement__Group__0__Impl
	rule__ExpressionElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getParameterAssignment_0()); }
(rule__ExpressionElement__ParameterAssignment_0)
{ after(grammarAccess.getExpressionElementAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionElement__Group__1__Impl
	rule__ExpressionElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getOperatorAssignment_1()); }
(rule__ExpressionElement__OperatorAssignment_1)
{ after(grammarAccess.getExpressionElementAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getRightAssignment_2()); }
(rule__ExpressionElement__RightAssignment_2)
{ after(grammarAccess.getExpressionElementAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ControlStatementElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__0__Impl
	rule__ControlStatementElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getErrorKeyword_0()); }

	'Error' 

{ after(grammarAccess.getControlStatementElementAccess().getErrorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlStatementElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__1__Impl
	rule__ControlStatementElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getControlStatementElementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlStatementElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__2__Impl
	rule__ControlStatementElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getQuotationMarkKeyword_2()); }

	'"' 

{ after(grammarAccess.getControlStatementElementAccess().getQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlStatementElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__3__Impl
	rule__ControlStatementElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getMessageAssignment_3()); }
(rule__ControlStatementElement__MessageAssignment_3)
{ after(grammarAccess.getControlStatementElementAccess().getMessageAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlStatementElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__4__Impl
	rule__ControlStatementElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getQuotationMarkKeyword_4()); }

	'"' 

{ after(grammarAccess.getControlStatementElementAccess().getQuotationMarkKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlStatementElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlStatementElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getControlStatementElementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Product__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getElementsCompilationUnitParserRuleCall_0()); }
	ruleCompilationUnit{ after(grammarAccess.getProductAccess().getElementsCompilationUnitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__NamespaceUnitAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getNamespaceUnitNamespaceUnitParserRuleCall_0_0()); }
	ruleNamespaceUnit{ after(grammarAccess.getCompilationUnitAccess().getNamespaceUnitNamespaceUnitParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__UseUnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getUseUnitUseUnitParserRuleCall_1_0()); }
	ruleUseUnit{ after(grammarAccess.getCompilationUnitAccess().getUseUnitUseUnitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__ProductUnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getProductUnitProductUnitParserRuleCall_2_0()); }
	ruleProductUnit{ after(grammarAccess.getCompilationUnitAccess().getProductUnitProductUnitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseUnit__ProductUnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseUnitAccess().getProductUnitEProductUnitCrossReference_1_0()); }
(
{ before(grammarAccess.getUseUnitAccess().getProductUnitEProductUnitQUALIFIEDIDParserRuleCall_1_0_1()); }
	ruleQUALIFIEDID{ after(grammarAccess.getUseUnitAccess().getProductUnitEProductUnitQUALIFIEDIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getUseUnitAccess().getProductUnitEProductUnitCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceUnit__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceUnitAccess().getNameQUALIFIEDIDParserRuleCall_1_0()); }
	ruleQUALIFIEDID{ after(grammarAccess.getNamespaceUnitAccess().getNameQUALIFIEDIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProductUnitAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getParametersParameterElementParserRuleCall_2_1_0()); }
	ruleParameterElement{ after(grammarAccess.getProductUnitAccess().getParametersParameterElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductUnit__OperationUnitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductUnitAccess().getOperationUnitOperationUnitParserRuleCall_3_0()); }
	ruleOperationUnit{ after(grammarAccess.getProductUnitAccess().getOperationUnitOperationUnitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterElementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElement__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementAccess().getTypeUMAPDataTypesEnumRuleCall_1_1_0()); }
	ruleUMAPDataTypes{ after(grammarAccess.getParameterElementAccess().getTypeUMAPDataTypesEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOperationUnitAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnit__ControlsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationUnitAccess().getControlsControlElementParserRuleCall_3_1_0()); }
	ruleControlElement{ after(grammarAccess.getOperationUnitAccess().getControlsControlElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlElement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlElementAccess().getExpressionExpressionElementParserRuleCall_0_0()); }
	ruleExpressionElement{ after(grammarAccess.getControlElementAccess().getExpressionExpressionElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlElement__ControlStatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlElementAccess().getControlStatementControlStatementElementParserRuleCall_2_0()); }
	ruleControlStatementElement{ after(grammarAccess.getControlElementAccess().getControlStatementControlStatementElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getParameterEParameterElementCrossReference_0_0()); }
(
{ before(grammarAccess.getExpressionElementAccess().getParameterEParameterElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionElementAccess().getParameterEParameterElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getExpressionElementAccess().getParameterEParameterElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getOperatorOPERATORSEnumRuleCall_1_0()); }
	ruleOPERATORS{ after(grammarAccess.getExpressionElementAccess().getOperatorOPERATORSEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getRightEOperationUnitCrossReference_2_0()); }
(
{ before(grammarAccess.getExpressionElementAccess().getRightEOperationUnitIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionElementAccess().getRightEOperationUnitIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getExpressionElementAccess().getRightEOperationUnitCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStatementElement__MessageAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStatementElementAccess().getMessageANY_OTHERTerminalRuleCall_3_0()); }
	RULE_ANY_OTHER{ after(grammarAccess.getControlStatementElementAccess().getMessageANY_OTHERTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


